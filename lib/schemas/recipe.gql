##
#
# Recipe module
#
# Provides for creating shareable blueprints of potential workflows that can be
# deployed as work plans for undertaking the actual work.
#
# @depends  measurement.gql
# @depends  knowledge.gql
# @package  vf-graphql
# @since    2019-02-11
#
##

"""
Specifies the resource as part of a recipe, for use in planning from recipe.
"""
type RecipeResource {
  id: ID!

  "An informal or formal textual identifier for a recipe resource. Does not imply uniqueness."
  name: String!

  "The unit of inventory used for this resource in the recipe."
  unitOfResource: Unit

  "The unit used for use action on this resource or work action in the recipe."
  unitOfEffort: Unit

  "The uri to an image relevant to the entity, such as a photo, diagram, etc."
  image: URI

  "A textual description or comment."
  note: String

  "The primary resource specification or definition of an existing or potential economic resource. A resource will have only one, as this specifies exactly what the resource is."
  resourceConformsTo: ResourceSpecificationRef

  "References a concept in a common taxonomy or other classification scheme for purposes of categorization or grouping."
  resourceClassifiedAs: [URI!]

  "Defines if any resource of that type can be freely substituted for any other resource of that type when used, consumed, traded, etc."
  substitutable: Boolean

  ##############################################################################
  # inverse relationships and queries

}

"""
The specification of a resource inflow to, or outflow from, a recipe process.
"""
type RecipeFlow {
  id: ID!

  "The amount and unit of the economic resource counted or inventoried."
  resourceQuantity: Measure

  "The amount and unit of the work or use or citation effort-based action. This is often a time duration, but also could be cycle counts or other measures of effort or usefulness."
  effortQuantity: Measure

  "The resource definition referenced by this flow in the recipe."
  recipeFlowResource: RecipeResource

  "Relates a process input or output to a verb, such as consume, produce, work, modify, etc."
  action: Action!

  "Relates an input flow to its process in a recipe."
  recipeInputOf: RecipeProcess

  "Relates an output flow to its process in a recipe."
  recipeOutputOf: RecipeProcess

  "A textual description or comment."
  note: String
}

"""
Specifies a process in a recipe for use in planning from recipe.
"""
type RecipeProcess {
  id: ID!

  "An informal or formal textual identifier for a recipe process. Does not imply uniqueness."
  name: String!

  "The planned calendar duration of the process as defined for the recipe batch."
  hasDuration: Duration

  "References a concept in a common taxonomy or other classification scheme for purposes of categorization."
  processClassifiedAs: [URI!]

  "The standard specification or definition of a process."
  processConformsTo: ProcessSpecificationRef!

  "A textual description or comment."
  note: String
}



input RecipeResourceCreateParams {
  "An informal or formal textual identifier for a recipe resource. Does not imply uniqueness."
  name: String!

  "(`Unit`) The unit of inventory used for this resource in the recipe."
  unitOfResource: ID

  "(`Unit`) The unit used for use action on this resource or work action in the recipe."
  unitOfEffort: ID

  "Defines if any resource of that type can be freely substituted for any other resource of that type when used, consumed, traded, etc."
  substitutable: Boolean

  "The uri to an image relevant to the entity, such as a photo, diagram, etc."
  image: URI

  "(`ResourceSpecification` | URI) The primary resource specification or definition of an existing or potential economic resource. A resource will have only one, as this specifies exactly what the resource is."
  resourceConformsTo: ID

  "References a concept in a common taxonomy or other classification scheme for purposes of categorization or grouping."
  resourceClassifiedAs: [URI!]

  "A textual description or comment."
  note: String
}

input RecipeResourceUpdateParams {
  id: ID!

  "An informal or formal textual identifier for a recipe resource. Does not imply uniqueness."
  name: String

  "(`Unit`) The unit of inventory used for this resource in the recipe."
  unitOfResource: ID

  "(`Unit`) The unit used for use action on this resource or work action in the recipe."
  unitOfEffort: ID

  "Defines if any resource of that type can be freely substituted for any other resource of that type when used, consumed, traded, etc."
  substitutable: Boolean

  "The uri to an image relevant to the entity, such as a photo, diagram, etc."
  image: URI

  "(`ResourceSpecification` | URI) The primary resource specification or definition of an existing or potential economic resource. A resource will have only one, as this specifies exactly what the resource is."
  resourceConformsTo: ID

  "References a concept in a common taxonomy or other classification scheme for purposes of categorization or grouping."
  resourceClassifiedAs: [URI!]

  "A textual description or comment."
  note: String
}

type RecipeResourceResponse {
  recipeResource: RecipeResource
}



input RecipeProcessCreateParams {
  "An informal or formal textual identifier for a recipe process. Does not imply uniqueness."
  name: String!

  "The planned calendar duration of the process as defined for the recipe batch."
  hasDuration: IDuration

  "(`ProcessSpecification` | URI) The standard specification or definition of a process."
  processConformsTo: ID!

  "References a concept in a common taxonomy or other classification scheme for purposes of categorization."
  processClassifiedAs: [URI!]

  "A textual description or comment."
  note: String
}

input RecipeProcessUpdateParams {
  id: ID!

  "An informal or formal textual identifier for a recipe process. Does not imply uniqueness."
  name: String

  "The planned calendar duration of the process as defined for the recipe batch."
  hasDuration: IDuration

  "(`ProcessSpecification` | URI) The standard specification or definition of a process."
  processConformsTo: ID!

  "References a concept in a common taxonomy or other classification scheme for purposes of categorization."
  processClassifiedAs: [URI!]

  "A textual description or comment."
  note: String
}

type RecipeProcessResponse {
  recipeProcess: RecipeProcess
}



input RecipeFlowCreateParams {
  "(`Action`) Relates a process input or output to a verb, such as consume, produce, work, modify, etc."
  action: ID!

  "(`RecipeResource`) The resource definition referenced by this flow in the recipe."
  recipeFlowResource: ID!

  "The amount and unit of the economic resource counted or inventoried."
  resourceQuantity: IMeasure

  "The amount and unit of the work or use or citation effort-based action. This is often a time duration, but also could be cycle counts or other measures of effort or usefulness."
  effortQuantity: IMeasure

  "(`RecipeProcess`) Relates an input flow to its process in a recipe."
  recipeInputOf: ID

  "(`RecipeProcess`) Relates an output flow to its process in a recipe."
  recipeOutputOf: ID

  "(`ProcessSpecification` | URI) References the ProcessSpecification of the last process the economic resource went through. Stage is used when the last process is important for finding proper resources, such as where the publishing process wants only documents that have gone through the editing process."
  stage: ID

  "The state of the desired economic resource (pass or fail), after coming out of a test or review process."
  state: String

  "A textual description or comment."
  note: String
}

input RecipeFlowUpdateParams {
  id: ID!

  "(`Action`) Relates a process input or output to a verb, such as consume, produce, work, modify, etc."
  action: ID

  "(`RecipeResource`) The resource definition referenced by this flow in the recipe."
  recipeFlowResource: ID

  "The amount and unit of the economic resource counted or inventoried."
  resourceQuantity: IMeasure

  "The amount and unit of the work or use or citation effort-based action. This is often a time duration, but also could be cycle counts or other measures of effort or usefulness."
  effortQuantity: IMeasure

  "(`RecipeProcess`) Relates an input flow to its process in a recipe."
  recipeInputOf: ID

  "(`RecipeProcess`) Relates an output flow to its process in a recipe."
  recipeOutputOf: ID

  "(`ProcessSpecification` | URI) References the ProcessSpecification of the last process the economic resource went through. Stage is used when the last process is important for finding proper resources, such as where the publishing process wants only documents that have gone through the editing process."
  stage: ID

  "The state of the desired economic resource (pass or fail), after coming out of a test or review process."
  state: String

  "A textual description or comment."
  note: String
}

type RecipeFlowResponse {
  recipeFlow: RecipeFlow
}



type Query {
  recipeResource(id: ID): RecipeResource
  recipeResources(start: ID, limit: Int): [RecipeResource!]

  recipeProcess(id: ID): RecipeProcess
  recipeProcesses(start: ID, limit: Int): [RecipeProcess!]

  recipeFlow(id: ID): RecipeFlow
  recipeFlows(start: ID, limit: Int): [RecipeFlow!]
}

type Mutation {
  createRecipeFlow(recipeFlow: RecipeFlowCreateParams): RecipeFlowResponse
  updateRecipeFlow(recipeFlow: RecipeFlowUpdateParams): RecipeFlowResponse
  deleteRecipeFlow(id: ID!): Boolean

  createRecipeProcess(recipeProcess: RecipeProcessCreateParams): RecipeProcessResponse
  updateRecipeProcess(recipeProcess: RecipeProcessUpdateParams): RecipeProcessResponse
  deleteRecipeProcess(id: ID!): Boolean

  createRecipeResource(recipeResource: RecipeResourceCreateParams): RecipeResourceResponse
  updateRecipeResource(recipeResource: RecipeResourceUpdateParams): RecipeResourceResponse
  deleteRecipeResource(id: ID!): Boolean
}
